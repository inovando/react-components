{"version":3,"sources":["../../dist/trash~XOtNinTH.svg","../../dist/close~yJuNWzHg.svg","../../src/components/Upload/styles.js","../../src/components/Cloud.js","../../src/components/Upload/i18n.js","../../src/components/Upload/Upload.js","../../src/components/UploadField.js","App.js","index.js"],"names":["module","exports","activeStyle","border","rejectStyle","Cloud","color","rest","width","height","viewBox","fill","d","locales","pt","formatBytes","bytes","decimals","dm","i","Math","parseFloat","Upload","onChange","onBlur","onFocus","name","label","errorText","value","locale","maxSize","style","useState","rejectedFiles","setRejectedFiles","maxSizeInBytes","useMemo","useDropzone","onDrop","acceptedFiles","file","Object","preview","URL","onDropRejected","getRootProps","getInputProps","isDragActive","isDragReject","thumbs","className","styles","key","image","src","filename","extension","size","onClick","index","type","trash","conditionalStyle","box","React","errors","rejected","interpolate","close","error","UploadField","input","meta","App","files","setFiles","textAlign","accept","margin","maxWidth","marginTop","href","target","rel","onSubmit","values","console","log","initialValues","render","handleSubmit","submitting","noValidate","component","validate","length","undefined","disabled","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3796c12c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trash~XOtNinTH.3cf79106.svg\";","module.exports = __webpack_public_path__ + \"static/media/close~yJuNWzHg.b195082a.svg\";","export const activeStyle = {\n  border: '2px dashed #25abf2',\n};\n\nexport const rejectStyle = {\n  border: '2px dashed #f44336',\n};\n","import * as React from 'react';\n\nfunction Cloud({ color = '', ...rest }) {\n  return (\n    <svg width={75} height={50} viewBox=\"0 0 75 50\" fill=\"none\" {...rest}>\n      <path\n        d=\"M60.469 18.875C58.344 8.094 48.875 0 37.5 0c-9.031 0-16.875 5.125-20.781 12.625C7.312 13.625 0 21.594 0 31.25 0 41.594 8.406 50 18.75 50h40.625C68 50 75 43 75 34.375c0-8.25-6.406-14.938-14.531-15.5zm-16.719 9.25v12.5h-12.5v-12.5h-9.375L37.5 12.5l15.625 15.625H43.75z\"\n        fill={color}\n      />\n    </svg>\n  );\n}\n\nexport default Cloud;\n","export const pt = {\n  'file-invalid-type': 'Tipo de arquivo inválido',\n  'file-too-large': 'Tamanho máximo excedido {{maxSize}}',\n  'file-too-small': 'Tamanho mínimo não cumprido {{maxSize}}',\n};\n\nexport const locales = { pt };\n","import React, { useMemo, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport styles from './styles.module.css';\nimport { activeStyle, rejectStyle } from './styles';\nimport Cloud from '../Cloud';\nimport trash from '../images/trash.svg';\nimport close from '../images/close.svg';\nimport { locales } from './i18n';\nimport template from 'lodash.template';\n\nfunction formatBytes(bytes, decimals = 2) {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\n}\n\nfunction Upload({\n  onChange = () => {},\n  onBlur = () => {},\n  onFocus = () => {},\n  name = 'upload',\n  label = '',\n  errorText = '',\n  value = [],\n  locale = 'pt',\n  maxSize = null,\n  style = {},\n  ...rest\n}) {\n  const [rejectedFiles, setRejectedFiles] = useState([]);\n\n  const maxSizeInBytes = useMemo(() => {\n    if (!maxSize) return null;\n    return maxSize * (1024 * 1024);\n  }, [maxSize]);\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragReject,\n  } = useDropzone({\n    onDrop: (acceptedFiles) => {\n      onChange(\n        acceptedFiles.map((file) => {\n          if (!file.type.includes('image/')) return file;\n          return Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          });\n        }),\n      );\n    },\n    onDropRejected: (rejectedFiles) => {\n      setRejectedFiles(rejectedFiles);\n    },\n    maxSize: maxSizeInBytes,\n    ...rest,\n  });\n\n  const thumbs = value.map((file, index) => {\n    return (\n      <div className={styles.thumb} key={file.name}>\n        <div className={styles.image}>\n          {file.preview && <img src={file.preview} />}\n          {!file.preview &&\n            file.name &&\n            file.name.split('.')[file.name.split('.').length - 1]}\n        </div>\n        <aside>\n          <div className={styles.file}>\n            <div className={styles.filename}>\n              {file.name.split('.').slice(0, -1).join('.')}\n            </div>\n            <div className={styles.extension}>\n              .{file.name.split('.')[file.name.split('.').length - 1]}\n            </div>\n          </div>\n          <div className={styles.size}>{formatBytes(file.size)}</div>\n        </aside>\n        <button\n          onClick={() =>\n            onChange(value.filter((file, fileIndex) => index !== fileIndex))\n          }\n          className={styles.delete}\n          type=\"button\"\n        >\n          <img src={trash} />\n        </button>\n      </div>\n    );\n  });\n\n  const conditionalStyle = useMemo(\n    () => ({\n      ...(isDragActive ? activeStyle : {}),\n      ...(isDragReject || !!errorText ? rejectStyle : {}),\n    }),\n    [isDragActive, isDragReject, errorText],\n  );\n\n  return (\n    <section className={styles.container} style={style}>\n      <div\n        className={styles.box}\n        {...getRootProps({ style: conditionalStyle, onBlur, onFocus })}\n      >\n        <input name={name} {...getInputProps()} />\n        <Cloud\n          color={\n            isDragReject ? '#f44336' : isDragActive ? '#25abf2' : '#CECFD1'\n          }\n        />\n        <p>{label}</p>\n      </div>\n      {rejectedFiles.map(({ errors, file: { name } }, rejectedIndex) => (\n        <div key={name} className={styles.rejected}>\n          <p>\n            {template(locales[locale][errors[0].code], {\n              interpolate: /{{([\\s\\S]+?)}}/g,\n            })({ maxSize: formatBytes(maxSizeInBytes) })}\n            : <strong>{name}</strong>\n          </p>\n          <button\n            onClick={() =>\n              setRejectedFiles(\n                rejectedFiles.filter((_item, index) => index !== rejectedIndex),\n              )\n            }\n            type=\"button\"\n          >\n            <img src={close} />\n          </button>\n        </div>\n      ))}\n      <div className={styles.preview}>{thumbs}</div>\n      {errorText && <div className={styles.error}>{errorText}</div>}\n    </section>\n  );\n}\n\nexport default Upload;\n","import React from 'react';\nimport Upload from './Upload';\n\nfunction UploadField({ input, meta, ...rest }) {\n  return (\n    <Upload {...input} errorText={meta.touched ? meta.error : ''} {...rest} />\n  );\n}\n\nexport default UploadField;\n","import React, { useState } from 'react';\nimport { Form, Field } from 'react-final-form';\n\nimport { Upload, UploadField } from '@inovando/react-components';\nimport '@inovando/react-components/dist/index.css';\n\nconst App = () => {\n  const [files, setFiles] = useState([]);\n\n  const onSubmit = (values) => {\n    console.log('values:', values);\n  };\n\n  return (\n    <div>\n      <h1 style={{ textAlign: 'center' }}>Inovando React Components</h1>\n      <div className=\"container\">\n        <h2>Upload Component</h2>\n\n        <Upload\n          onChange={(files) => {\n            setFiles(files);\n          }}\n          label=\"Arraste arquivos ou clique aqui para fazer upload\"\n          value={files}\n          accept=\"image/*\" // accept only images (Optional)\n          maxSize={3} // in mb (Optional)\n          style={{ margin: '0 auto', maxWidth: 400 }}\n        />\n\n        <h2 style={{ textAlign: 'center', marginTop: 80 }}>\n          <a\n            href=\"https://final-form.org/react/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Final-Form\n          </a>{' '}\n          Adapters\n        </h2>\n        <h3>UploadField</h3>\n\n        <Form\n          onSubmit={onSubmit}\n          initialValues={{\n            files: [],\n          }}\n          render={({ handleSubmit, submitting }) => (\n            <form onSubmit={handleSubmit} noValidate>\n              <Field\n                name=\"files\"\n                component={UploadField}\n                label=\"Arraste arquivos ou clique aqui para fazer upload\"\n                validate={(value) =>\n                  value.length ? undefined : 'Campo obrigatório'\n                }\n                style={{ margin: '0 auto', maxWidth: 400 }}\n              />\n              <button disabled={submitting} type=\"submit\">\n                submit\n              </button>\n            </form>\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}